org: niklasnilsson
app: exam-app
service: exam-app

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  deploymentMethod: direct
  iam:
    role: arn:aws:iam::376129862797:role/LambdaDynamoDBuserRole

functions:
  getKey:
    handler: functions/getKey/index.getRandomKey
    events:
      - httpApi:
          path: /key
          method: get

  regUser:
    handler: functions/regUser/index.regUser
    events:
      - httpApi:
          path: /register/{key}
          method: post

  getUser:
    handler: functions/getUser/index.getUser
    events:
      - httpApi:
          path: /get/user/{id}
          method: get
  getAllUsers:
    handler: functions/getAllUsers/index.getAllUsers
    events:
      - httpApi:
          path: /get/allusers
          method: get
  loginUser:
    handler: functions/loginUser/index.loginUser
    events:
      - httpApi:
          path: /login/user
          method: post
  logoutUser:
    handler: functions/logoutUser/index.logoutUser
    events:
      - httpApi:
          path: /logout/user
          method: post
  removeFriend:
    handler: functions/removeFriend/index.removeFriend
    events:
      - httpApi:
          path: /remove/friend
          method: post
  addFriend:
    handler: functions/addFriend/index.addFriend
    events:
      - httpApi:
          path: /add/friend
          method: post
  deleteUser:
    handler: functions/deleteUser/index.deleteUser
    events:
      - httpApi:
          path: /delete/user/{id}
          method: delete
  updateUser:
    handler: functions/updateUser/index.updateUser
    events:
      - httpApi:
          path: /update/user/{id}
          method: put
  onlineUsers:
    handler: functions/onlineUsers/index.onlineUsers
    events:
      - httpApi:
          path: /get/online/users
          method: get
  socketConnect:
    handler: middlewares/userSocketMiddleware.connect
    events:
      - websocket:
          route: $connect
  socketDisconnect:
    handler: middlewares/userSocketMiddleware.disconnect
    events:
      - websocket:
          route: $disconnect
  chatSocket:
    handler: sockets/chatSocket.sendMessage
    events:
      - websocket:
          route: sendMessage
  socketTyping:
    handler: sockets/chatSocket.typing
    events:
      - websocket:
          route: typing

package:
  patterns:
    - node_modules/dotenv/**
    - validations/**
    - utils/**
    - functions/getUser/**
    - functions/loginUser/**
    - functions/logoutUser/**
    - functions/getAllUsers/**
    - functions/onlineUsers/**
    - services/**
    - models/**
    - responses/**
    - data/**
    - middlewares/**
    - sockets/**

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: LunaChat-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: nickname
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: nickname-index
            KeySchema:
              - AttributeName: nickname
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    ConnectionsTable:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: LunaChat-connections
            AttributeDefinitions:
              - AttributeName: connectionId
                AttributeType: S
            KeySchema:
              - AttributeName: connectionId
                KeyType: HASH
            BillingMode: PAY_PER_REQUEST